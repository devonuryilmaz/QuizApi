// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using QuizAPI.Data;
using System;

namespace QuizAPI.Migrations
{
    [DbContext(typeof(QuizAppContext))]
    [Migration("20190128181521_initialcreate")]
    partial class initialcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QuizAPI.Entities.Concrete.Kategori", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("KategoriAdi");

                    b.HasKey("KategoriID");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("QuizAPI.Entities.Concrete.Kullanici", b =>
                {
                    b.Property<int>("KullaniciID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("KullaniciAdi");

                    b.Property<string>("Sifre");

                    b.Property<bool>("isAdmin");

                    b.HasKey("KullaniciID");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("QuizAPI.Entities.Concrete.KullaniciIlerleme", b =>
                {
                    b.Property<int>("IlerlemeID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("KullaniciID");

                    b.Property<int>("SoruID");

                    b.HasKey("IlerlemeID");

                    b.ToTable("KullaniciIlerlemeler");
                });

            modelBuilder.Entity("QuizAPI.Entities.Concrete.Secenek", b =>
                {
                    b.Property<int>("SecenekID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Icerik");

                    b.Property<int>("SoruID");

                    b.Property<bool>("isTrue");

                    b.HasKey("SecenekID");

                    b.HasIndex("SoruID");

                    b.ToTable("Secenekler");
                });

            modelBuilder.Entity("QuizAPI.Entities.Concrete.Seviye", b =>
                {
                    b.Property<int>("SeviyeID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("KategoriID");

                    b.Property<string>("SeviyeNumarasi");

                    b.HasKey("SeviyeID");

                    b.HasIndex("KategoriID");

                    b.ToTable("Seviyeler");
                });

            modelBuilder.Entity("QuizAPI.Entities.Concrete.Soru", b =>
                {
                    b.Property<int>("SoruID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("SeviyeID");

                    b.Property<string>("SoruCumlesi");

                    b.Property<int>("SoruNumarasi");

                    b.Property<int>("SoruTipi");

                    b.HasKey("SoruID");

                    b.HasIndex("SeviyeID");

                    b.ToTable("Sorular");
                });

            modelBuilder.Entity("QuizAPI.Entities.Concrete.Secenek", b =>
                {
                    b.HasOne("QuizAPI.Entities.Concrete.Soru")
                        .WithMany("Secenekler")
                        .HasForeignKey("SoruID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("QuizAPI.Entities.Concrete.Seviye", b =>
                {
                    b.HasOne("QuizAPI.Entities.Concrete.Kategori", "Kategori")
                        .WithMany("Seviyeler")
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("QuizAPI.Entities.Concrete.Soru", b =>
                {
                    b.HasOne("QuizAPI.Entities.Concrete.Seviye")
                        .WithMany("Sorular")
                        .HasForeignKey("SeviyeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
